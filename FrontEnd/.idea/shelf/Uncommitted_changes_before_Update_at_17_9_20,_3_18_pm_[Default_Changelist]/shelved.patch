Index: Dockerfile
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># pull official base image\nFROM node:13.12.0-alpine\n\n# set working directory\nWORKDIR /scheduler\n\n# add `/app/node_modules/.bin` to $PATH\nENV PATH /scheduler/node_modules/.bin:$PATH\n\n# install app dependencies\nCOPY /scheduler/package.json ./\nCOPY /scheduler/package-lock.json ./\nRUN npm install --silent\nRUN npm install react-scripts@3.4.1 -g --silent\n\n# add app\nCOPY . ./\n\n# start app\nCMD [\"npm\", \"start\"]\n\n\n# docker build -t sample:dev .\n\n#docker run \\\n#    -it \\\n#    --rm \\\n#    -v ${PWD}:/app \\\n#    -v /scheduler/package.json \\\n#    -v /scheduler/node_modules \\\n#    -p 3001:3000 \\\n#    -e CHOKIDAR_USEPOLLING=true \\\n#    sample:dev
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Dockerfile	(revision 5c46b44db585b805130db87dd9c5775086efb667)
+++ Dockerfile	(date 1600311988340)
@@ -1,33 +1,15 @@
 # pull official base image
-FROM node:13.12.0-alpine
+FROM node:alpine
 
 # set working directory
-WORKDIR /scheduler
-
-# add `/app/node_modules/.bin` to $PATH
-ENV PATH /scheduler/node_modules/.bin:$PATH
+WORKDIR scheduler
 
 # install app dependencies
-COPY /scheduler/package.json ./
-COPY /scheduler/package-lock.json ./
+COPY package.json ./
 RUN npm install --silent
-RUN npm install react-scripts@3.4.1 -g --silent
 
 # add app
 COPY . ./
 
 # start app
-CMD ["npm", "start"]
-
-
-# docker build -t sample:dev .
-
-#docker run \
-#    -it \
-#    --rm \
-#    -v ${PWD}:/app \
-#    -v /scheduler/package.json \
-#    -v /scheduler/node_modules \
-#    -p 3001:3000 \
-#    -e CHOKIDAR_USEPOLLING=true \
-#    sample:dev
\ No newline at end of file
+CMD ["npm", "start"]
\ No newline at end of file
Index: scheduler/src/Components/HomePage/Login.test.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React from \"react\";\nimport Login from \"./Login\";\nimport {shallow, mount} from \"enzyme\";\nimport Enzyme from \"enzyme\";\nimport Adapter from \"enzyme-adapter-react-16\";\nimport {Form, FormControl} from \"react-bootstrap\";\nimport MyError from \"../Generics/MyError\";\nimport {userCreate} from \"../../actions/userActions\";\n\nEnzyme.configure({adapter : new Adapter()});\n\n\ndescribe(\"Login unit test\",() => {\n\n    const wrapper = shallow(<Login />);\n\n    beforeEach(() =>\n    {\n        wrapper.resetState;\n    })\n\n    beforeAll(() =>\n    {\n        let user={\n            name: \"max\",\n            username: \"max\",\n            password: \"password\",\n            contactNumber: 12,\n            email: \"max@max.com\",\n            accountType:2\n        }\n        userCreate(user);\n    })\n\n    it(\"should have 2 formControl elements\", () =>\n    {\n        expect(wrapper.find(FormControl)).toHaveLength(2);\n    });\n\n    it(\"Should render with both fields blank\", () => {\n        expect(wrapper.find(FormControl).at(0).prop('value')).toEqual(\"\");\n        expect(wrapper.find(FormControl).at(1).prop('value')).toEqual(\"\");\n    });\n\n    it(\"Should update value with text change\", () => {\n        wrapper.find(FormControl).at(0).dive().simulate('change', { target: { name: \"email\", value: \"a\" } });\n        expect(wrapper.find(FormControl).at(0).prop('value')).toEqual(\"a\");\n    });\n\n    it(\"Should revert value between tests\", () => {\n        expect(wrapper.find(FormControl).at(0).prop('value')).toEqual(\"a\");\n    });\n\n    //test that backend works?\n    //need to wait properly ?\n\n\n    it(\"should fail when it tries to login with no account\", async () => {\n        const fakeEvent = {preventDefault: () => console.log('preventDefault')};\n        await wrapper.find(Form).simulate('submit',fakeEvent);\n        expect(wrapper.find(MyError)).toHaveLength(1);\n    });\n\n\n\n})\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- scheduler/src/Components/HomePage/Login.test.js	(revision 5c46b44db585b805130db87dd9c5775086efb667)
+++ scheduler/src/Components/HomePage/Login.test.js	(date 1600309399721)
@@ -53,8 +53,6 @@
 
     //test that backend works?
     //need to wait properly ?
-
-
     it("should fail when it tries to login with no account", async () => {
         const fakeEvent = {preventDefault: () => console.log('preventDefault')};
         await wrapper.find(Form).simulate('submit',fakeEvent);
